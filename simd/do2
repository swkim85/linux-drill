
$ gcc -g  -o vecadd  vecadd.c rdtsc.o  --save-temps -DN=100000000 
$ ./vecadd
va = first 10 elements :100.0 100.0 100.0 100.0 100.0 100.0 100.0 100.0 100.0 100.0
vb = first 10 elements :2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0
with sse Elapsed Time (cycles): 480959668
without sse Elapsed Time (cycles): 741395838
r1 = first 10 elements :102.0 102.0 102.0 102.0 102.0 102.0 102.0 102.0 102.0 102.0
r2 = first 10 elements :102.0 102.0 102.0 102.0 102.0 102.0 102.0 102.0 102.0 102.0
 ; SSE를 활용한 경우 실행시간이 약65% (480959668/741395838=0.648) 로 감소됨	



$ gcc  -mavx  -g  -o hello_avx.o  -c hello_avx.c 
$ gcc  -static -o hello_avx  hello_avx.o  rdtsc.o
$ ./hello_avx
Elapsed Time (cycles): 96
1.000000 1.000000 1.000000 1.000000 1.000000 1.000000 1.000000 1.000000 


$ gcc -o mmsize mmsize.c
$ ./mmsize 
size of __m256 32 
size of __m512 64 


$ gcc  -march=native    -g  -o bf16ex.o -c bf16ex.c  --save-temps
$ gcc  -static -o bf16ex  bf16ex.o  rdtsc.o  -Wl,-Map=bf16ex.map
$ ./bf16ex


$ g++ -g -static -o vpmaddwd vpmaddwd.cpp  -march=native
$ ./vpmaddwd
3 7 11 15 19 23 27 31 70 78 86 94 102 110 118 126


$  g++ -g -static -o vpaddd vpaddd.cpp -march=native
$ ./vpaddd


$ g++ -g -static  -o vpdpwssd  vpdpwssd.cpp  -march=native
$ ./vpdpwssd


$ gcc -g -static -o vnni.o  -c vnni.c -march=native -DN=1000000000
$ gcc -static -o vnni  vnni.o rdtsc.o
$ ./vnni


$ gcc -g -static -o compare compare.c -march=native
$ ./compare 
mask : 00FF 
mask : 0FFF

$ gcc -g -static -o compare2  compare2.c  -march=native 
$ ./compare2
(mask2): 0xc000


